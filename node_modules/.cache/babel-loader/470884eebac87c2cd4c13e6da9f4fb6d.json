{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\VS_CODE\\\\Shinigamis_Homework\\\\HMS\\\\src\\\\pages\\\\1.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport supabase from \"../config/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowRoleID1 = () => {\n  _s();\n\n  const [email, setEmail] = useState(''); // from input form\n\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    if (!email) return; // avoid querying if email is empty\n\n    const fetchUserByEmail = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('User').select('*').eq('Email', email).single();\n\n      if (error) {\n        console.log(error);\n        setUserData(null); // handle error message\n      } else {\n        setUserData(data);\n      }\n    };\n\n    fetchUserByEmail();\n  }, [email]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading doctor data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (formError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: formError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!doctor) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: [\"No doctor found with ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \" \", doctor.User_ID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \" \", doctor.Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Role ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \" \", doctor.Role_ID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Registration Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" \", new Date(doctor.Registration_Date).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Gender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \" \", doctor.Gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Date of Birth:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), \" \", new Date(doctor.Date_of_Birth).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), \" \", doctor.Email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), \" \", doctor.Phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" \", doctor.Address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowRoleID1, \"AXt24WBGk7rhttvyU5fBqjxrzkM=\");\n\n_c = ShowRoleID1;\nexport default ShowRoleID1;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowRoleID1\");","map":{"version":3,"names":["useParams","useNavigate","useEffect","useState","supabase","ShowRoleID1","email","setEmail","userData","setUserData","fetchUserByEmail","data","error","from","select","eq","single","console","log","loading","formError","doctor","id","User_ID","Name","Role_ID","Date","Registration_Date","toLocaleDateString","Gender","Date_of_Birth","Email","Phone","Address"],"sources":["C:/Users/User/Desktop/VS_CODE/Shinigamis_Homework/HMS/src/pages/1.js"],"sourcesContent":["import { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport supabase from \"../config/supabaseClient\";\r\n\r\nconst ShowRoleID1 = () => {\r\n    const [email, setEmail] = useState(''); // from input form\r\n    const [userData, setUserData] = useState(null);\r\n    \r\n    useEffect(() => {\r\n      if (!email) return;  // avoid querying if email is empty\r\n    \r\n      const fetchUserByEmail = async () => {\r\n        const { data, error } = await supabase\r\n          .from('User')\r\n          .select('*')\r\n          .eq('Email', email)\r\n          .single();\r\n    \r\n        if (error) {\r\n          console.log(error);\r\n          setUserData(null);\r\n          // handle error message\r\n        } else {\r\n          setUserData(data);\r\n        }\r\n      };\r\n    \r\n      fetchUserByEmail();\r\n    }, [email]);\r\n    \r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading doctor data...</div>;\r\n  }\r\n\r\n  if (formError) {\r\n    return <div className=\"error\">{formError}</div>;\r\n  }\r\n\r\n  if (!doctor) {\r\n    return <div className=\"no-data\">No doctor found with ID: {id}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"doctor-profile\">\r\n      <h2>Doctor Profile</h2>\r\n      <div className=\"doctor-info\">\r\n        <p>\r\n          <span className=\"label\">User ID:</span> {doctor.User_ID}\r\n        </p>\r\n        <p>\r\n          <span className=\"label\">Name:</span> {doctor.Name}\r\n        </p>\r\n        <p>\r\n          <span className=\"label\">Role ID:</span> {doctor.Role_ID}\r\n        </p>\r\n        <p>\r\n          <span className=\"label\">Registration Date:</span>{\" \"}\r\n          {new Date(doctor.Registration_Date).toLocaleDateString()}\r\n        </p>\r\n        <p>\r\n          <span className=\"label\">Gender:</span> {doctor.Gender}\r\n        </p>\r\n        <p>\r\n          <span className=\"label\">Date of Birth:</span>{\" \"}\r\n          {new Date(doctor.Date_of_Birth).toLocaleDateString()}\r\n        </p>\r\n        <p>\r\n          <span className=\"label\">Email:</span> {doctor.Email}\r\n        </p>\r\n        <p>\r\n          <span className=\"label\">Phone:</span> {doctor.Phone}\r\n        </p>\r\n        <p>\r\n          <span className=\"label\">Address:</span> {doctor.Address}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowRoleID1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}