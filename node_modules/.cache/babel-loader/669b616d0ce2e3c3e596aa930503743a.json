{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\VS_CODE\\\\Shinigamis_Homework\\\\HMS\\\\src\\\\pages\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport supabase from \"../config/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formError, setFormError] = useState('');\n\n  const handleSignIn = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      setFormError(\"Fill in email and password correctly\");\n      return;\n    }\n\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n\n    if (error) {\n      console.log(error);\n      setFormError(\"Wrong email or password\");\n      return;\n    } // Fetch User data from your User table (get Role_ID, User_ID etc)\n\n\n    const {\n      data: userData,\n      error: userError\n    } = await supabase.from('User').select('User_ID, Role_ID').eq('Email', email).single();\n\n    if (userError) {\n      console.log(userError);\n      setFormError(\"Failed to fetch user data\");\n      return;\n    } // Navigate using Role_ID\n\n\n    navigate(`/${userData.Role_ID}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signIn\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"H3BfW1L2KHExjtlRH/kWdkziB2w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useState","useNavigate","supabase","SignIn","navigate","email","setEmail","password","setPassword","formError","setFormError","handleSignIn","e","preventDefault","data","error","auth","signInWithPassword","console","log","userData","userError","from","select","eq","single","Role_ID","target","value"],"sources":["C:/Users/User/Desktop/VS_CODE/Shinigamis_Homework/HMS/src/pages/SignIn.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport supabase from \"../config/supabaseClient\";\r\n\r\nconst SignIn = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [formError, setFormError] = useState('');\r\n\r\n  const handleSignIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      setFormError(\"Fill in email and password correctly\");\r\n      return;\r\n    }\r\n\r\n    const { data, error } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password\r\n    });\r\n\r\n    if (error) {\r\n      console.log(error);\r\n      setFormError(\"Wrong email or password\");\r\n      return;\r\n    }\r\n\r\n    // Fetch User data from your User table (get Role_ID, User_ID etc)\r\n    const { data: userData, error: userError } = await supabase\r\n      .from('User')\r\n      .select('User_ID, Role_ID')\r\n      .eq('Email', email)\r\n      .single();\r\n\r\n    if (userError) {\r\n      console.log(userError);\r\n      setFormError(\"Failed to fetch user data\");\r\n      return;\r\n    }\r\n\r\n    // Navigate using Role_ID\r\n    navigate(`/${userData.Role_ID}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"signIn\">\r\n      <form onSubmit={handleSignIn}>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input \r\n          type=\"text\" \r\n          value={email} \r\n          onChange={(e) => setEmail(e.target.value)} \r\n        />\r\n\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input \r\n          type=\"password\" \r\n          value={password} \r\n          onChange={(e) => setPassword(e.target.value)} \r\n        />\r\n\r\n        <button type=\"submit\">Sign In</button>\r\n        {formError && <p className=\"error\">{formError}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;;EAEA,MAAMW,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;;IAEA,IAAI,CAACR,KAAD,IAAU,CAACE,QAAf,EAAyB;MACvBG,YAAY,CAAC,sCAAD,CAAZ;MACA;IACD;;IAED,MAAM;MAAEI,IAAF;MAAQC;IAAR,IAAkB,MAAMb,QAAQ,CAACc,IAAT,CAAcC,kBAAd,CAAiC;MAC7DZ,KAD6D;MAE7DE;IAF6D,CAAjC,CAA9B;;IAKA,IAAIQ,KAAJ,EAAW;MACTG,OAAO,CAACC,GAAR,CAAYJ,KAAZ;MACAL,YAAY,CAAC,yBAAD,CAAZ;MACA;IACD,CAjB+B,CAmBhC;;;IACA,MAAM;MAAEI,IAAI,EAAEM,QAAR;MAAkBL,KAAK,EAAEM;IAAzB,IAAuC,MAAMnB,QAAQ,CACxDoB,IADgD,CAC3C,MAD2C,EAEhDC,MAFgD,CAEzC,kBAFyC,EAGhDC,EAHgD,CAG7C,OAH6C,EAGpCnB,KAHoC,EAIhDoB,MAJgD,EAAnD;;IAMA,IAAIJ,SAAJ,EAAe;MACbH,OAAO,CAACC,GAAR,CAAYE,SAAZ;MACAX,YAAY,CAAC,2BAAD,CAAZ;MACA;IACD,CA9B+B,CAgChC;;;IACAN,QAAQ,CAAE,IAAGgB,QAAQ,CAACM,OAAQ,EAAtB,CAAR;EACD,CAlCD;;EAoCA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,uBACE;MAAM,QAAQ,EAAEf,YAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAEN,KAFT;QAGE,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACe,MAAF,CAASC,KAAV;MAH3B;QAAA;QAAA;QAAA;MAAA,QAFF,eAQE;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF,eASE;QACE,IAAI,EAAC,UADP;QAEE,KAAK,EAAErB,QAFT;QAGE,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACe,MAAF,CAASC,KAAV;MAH9B;QAAA;QAAA;QAAA;MAAA,QATF,eAeE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAfF,EAgBGnB,SAAS,iBAAI;QAAG,SAAS,EAAC,OAAb;QAAA,UAAsBA;MAAtB;QAAA;QAAA;QAAA;MAAA,QAhBhB;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAhED;;GAAMN,M;UACaF,W;;;KADbE,M;AAkEN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}